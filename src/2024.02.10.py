p = [0x3FD945D1, 0xBCD3960B, 0xD65B158F, 0x5910274D, 0x3DFF5FB7, 0x8ECCE410, 0x45204802, 0xCEFEDE37, 0x7C960F0D,
     0xC126A337, 0x17C8E62E, 0x34A7707D, 0x12DC81C3, 0xC7364234, 0x512EB4EC, 0x22F9A0CA, 0xB4A91F7E, 0x3536CBA0]

s = [[0x481BF437, 0xDC5D23AC, 0x04D78597, 0x82FF0EF9, 0xA6E82423, 0x575D131A, 0x2461EF48, 0x3D0123EC, 0x6DE51144,
      0xAC902E93, 0x857CCFBB, 0xB1009052, 0x856EFBB3, 0x5BD713BD, 0xD3FF6A53, 0x57FFFB1F, 0xA1723D71, 0xBFF8AD9B,
      0x033E1043, 0x9041A026, 0x3067D571, 0xF5B0B84E, 0x4CCF8815, 0x2E23A793, 0x3FF03292, 0x3778C862, 0xD5CAAA2D,
      0xCC20FE5B, 0x37976185, 0x57663BE5, 0x1551BEE9, 0x251EB862, 0xED3AAB56, 0xF0E6D576, 0x0B72C76F, 0x94A3E6D6,
      0x52A42DCF, 0xBA8E92E6, 0x98F0F31D, 0x271BE70B, 0x69916B82, 0xF0F9FA67, 0xB40484EE, 0xD1617FDE, 0xC935BD65,
      0x96A06533, 0x11ECF83B, 0xE660B376, 0x298AB07C, 0x4B545CF1, 0x1AD3D0F5, 0x65183063, 0x4A891FBA, 0x972CDFC7,
      0x957E9FEA, 0x549A17C2, 0x8D81C6CD, 0x8D5150B1, 0x8090ADCB, 0x6DF58DF6, 0xB5271013, 0xB4FA66C6, 0xD27DE197,
      0x2A52FB24, 0xD43F36A6, 0xBE7BE231, 0xE0FC52A7, 0xCF4F1D3C, 0xE01D7877, 0x8D366CFA, 0x5976C51E, 0xB7368400,
      0xBE2CE754, 0x8E8FF99D, 0x357B9025, 0x51AAFEE7, 0x229F43A8, 0x0FB7C649, 0x421693F7, 0x7B6CA342, 0x8CCD2BD9,
      0xF1DF8478, 0x7CAD46B6, 0x7C0BC7B8, 0x3C985E6A, 0xE7CB0F50, 0x6C75FF41, 0x5B5C31CF, 0xA9E43AB1, 0x8A6DB2E7,
      0xDB068D0A, 0xD7E4869F, 0xB239C688, 0xACB2E45B, 0xDDD6F6D2, 0x1186C10A, 0x2A82C906, 0xCE4EA2B6, 0x33B3891A,
      0x70BCC0A3, 0x1043D0C6, 0x61D27643, 0xC1465C8F, 0x2DDC090D, 0x3129F7E2, 0x5148ADF1, 0xFAF6CF1E, 0xB87F236A,
      0x09AEC448, 0xDE41928E, 0xAA9E5704, 0x98282B33, 0x1B3FFF71, 0x82F6CD8E, 0x44096D3B, 0x862B69DC, 0x4F3DD35E,
      0xF5F81B31, 0x1104AE3C, 0xE2099DBB, 0x5B32D3D4, 0xBDEF64B9, 0x026C08A1, 0x1D63182F, 0xDF39887C, 0x6E73B00B,
      0xA59CC718, 0xBD5361B3, 0x1F0A5FEE, 0xE66C6CA6, 0xB21AE9A7, 0x1BB5E77A, 0xC9FA05C8, 0xA42AE815, 0x37E854CC,
      0x4F3FFFCC, 0x7ECF4801, 0x9BDB62DE, 0x3D955730, 0xA1246F2F, 0xD7376E4C, 0x27405809, 0x40708738, 0x3CE348A1,
      0x3D49C76E, 0xF221AFB1, 0x359B6B51, 0x3494CEF0, 0xF5923CB7, 0x9ADCA21F, 0x6318B2C2, 0x2E998E12, 0x31E8C088,
      0xC9EEE407, 0xF0F972A7, 0x3F58A2C1, 0x85441EB0, 0x57F12AC8, 0xB6204CCA, 0xF995A4B8, 0x4D1E65E3, 0x6A4AAB35,
      0xBBADBD92, 0xD3A82A0D, 0x232F48AC, 0xB66A9FB7, 0x1A7616AD, 0xCF5B96AB, 0x6B9B7549, 0x5F217083, 0xBAFD61D2,
      0xAC7C0BCE, 0xA71B0470, 0x1F860D1D, 0x7E2F79EE, 0xD46835AC, 0x55F56CB6, 0x702AFC6F, 0x08148960, 0xE94AF584,
      0xFD87FC0C, 0x8CE855F6, 0x117364D7, 0x7BAF8309, 0xD069C939, 0x0EE6B7B8, 0xC7CB1559, 0x7989035A, 0x0BAEB75A,
      0x799D262D, 0xA6E01545, 0xCDB2B476, 0x598100C2, 0xD0C1A034, 0x8D39BDDD, 0x88B8EDAB, 0x6E491D0E, 0x13451728,
      0x1DD38321, 0x90BC9431, 0x309F9BC0, 0xC63650FA, 0x930AA1C0, 0x57E95291, 0x1A486F14, 0x164DE81D, 0xB3FF95B3,
      0x26DAC460, 0x33F9566F, 0x347261FA, 0xC3D640EA, 0xEEEC0A4E, 0xBF046B40, 0x3F72E334, 0xD37EC144, 0x474B49F5,
      0xCE069F18, 0x58B5BA9E, 0x2F740D74, 0xCC929482, 0xA28B84B8, 0xB914955B, 0x4A020BC9, 0x77A81564, 0x6AB9B308,
      0x53885B3D, 0x84141144, 0x326AC8AD, 0xEA98917D, 0x71F16331, 0x6D3CA28A, 0xFDB3E37B, 0xF41BAFCE, 0x31CBD8DC,
      0x7B8A1EF4, 0x5F3C3FB0, 0xC02A3B25, 0x74EBCDF1, 0x293E1C6F, 0x0204B998, 0xA0D5559C, 0xA50AB5C8, 0xB40BB451,
      0x129FEB88, 0x38B21DE3, 0xF024FC5F, 0x57585689, 0x4A8E2B7A, 0x3E2C9470, 0x6037FB17, 0x7562CD24, 0x1B6BD682,
      0x4B18A37D, 0xEC888D29, 0xF58C6163, 0x3163794B],
     [0x2A0FBE06, 0x0DC83A4D, 0x7F9930AD, 0x2554BD62, 0xF2EF74E5, 0xC6FC7035, 0xF71D4D24, 0x1BAD022E, 0xB07F9B49,
      0xF854644F, 0xF9B96A68, 0x9DB79D69, 0x990D805C, 0x3E305C66, 0xDFB580E9, 0xB98D37F6, 0x9E3F6AE3, 0xEA15712D,
      0xE8E22F92, 0x99162E15, 0xB202D2CD, 0xDD0D1ABF, 0xE2BAD3D1, 0x52538B6B, 0xDDACBF97, 0x682F8A32, 0x28AD385F,
      0x38CEDD35, 0x7BF18570, 0x117CFAA6, 0xACE78683, 0x2A9441E5, 0xF7A30132, 0x3AE8E160, 0x4A0A0EB6, 0xC98470E7,
      0x2C77BCB6, 0x1474E615, 0x1E562831, 0xE1F29FB0, 0x62DB0FDB, 0xDDF30948, 0xE607C70E, 0x37C1266A, 0x29276642,
      0xDBB4983E, 0xCA85E0EC, 0xB0BA2380, 0x671AAEAE, 0xF68B281F, 0xA4C3CD16, 0x396D5745, 0x1C67DA43, 0x91957D6C,
      0x9934A089, 0xE2A7E692, 0x2B9DD308, 0x6337088B, 0x5704D57C, 0x0F35E6EF, 0x9F383F11, 0xD19B54C9, 0x429F724D,
      0x54BC18D4, 0xF7260B1F, 0x3DB852EF, 0x3A4A4612, 0x02A7A1AA, 0x9B8510A0, 0x503EE434, 0x8B3E4926, 0x5D371092,
      0xAAED1783, 0x50B70AEA, 0x1479D672, 0x10BAA390, 0x792BD0DA, 0x0AAD605B, 0x9779576E, 0x2BA687C7, 0x873295F5,
      0x9C3D4B26, 0x9C72C65C, 0x732EC04D, 0x28EB8E88, 0x3C35E146, 0x38441A85, 0xD73B1F54, 0x060FE104, 0x94B91017,
      0x98814183, 0x52564EBD, 0xAE0C003C, 0x72FEA37E, 0xDE053AE1, 0x70D8A10D, 0x93F9B639, 0xD2843F6A, 0x190D78EF,
      0x8B597FCC, 0xA6A898FD, 0xA56636AE, 0xD8A76EBE, 0x5D55E369, 0xCC8B4C3B, 0x4E7AFAC8, 0xE8ED6C91, 0x1441B851,
      0x7CCCE62C, 0x98C2C464, 0x3D11EA89, 0x229F9C0E, 0xD6F7EEBE, 0x748992B8, 0x0F891D0E, 0xF8EB2D76, 0xAD54C837,
      0xF800FECE, 0x20740A50, 0x44680ADC, 0x51B4D876, 0x0D839CC5, 0x1BAB3076, 0x11A1260C, 0x617D21A5, 0xF805ED52,
      0x79D2D8C1, 0x68300370, 0x610C92CA, 0xCD820B79, 0x6D02A6E2, 0x61228025, 0x3BCBDA8E, 0xF15950AF, 0xE0A28F69,
      0xF3AC81CB, 0xA90FD1EA, 0x6CACBE4E, 0x2D2EB2B7, 0xDE492DEE, 0xE10A9B9F, 0xBE6D1C1A, 0xA969F851, 0x64971477,
      0x72E4C16D, 0x7FA170ED, 0xB72FEA05, 0x17098250, 0x9B0F9BAE, 0x0CE34630, 0x18484568, 0x777565EA, 0xB7D2DEE5,
      0x2F828D86, 0x7D3C640D, 0xBB8E323C, 0x45C3B6CC, 0xCAE3EA99, 0x780BE4C7, 0x49801EFA, 0x777A9B4F, 0x9B902DD3,
      0x3005D3EF, 0xD2730EC4, 0x501B3086, 0xACE624A9, 0x6A24C900, 0x3D66AA28, 0x00AFC41C, 0x132B2B21, 0xC6315F43,
      0xA43B36A8, 0x6D085C88, 0x0F886006, 0xF5973ACE, 0x43562494, 0xEE881B58, 0x3B04EC48, 0x8F86E0E6, 0x8A4DAEF3,
      0xE5AC50B2, 0x98AF600D, 0xE36FA3AF, 0x559C59FE, 0x5D086622, 0x0A884220, 0x53E90366, 0x6CD3AE70, 0x3212BF87,
      0xD4C7B4D9, 0x6DAA284A, 0x442205D1, 0xBBEB9198, 0x38268C86, 0x532D28B9, 0x5A56DD74, 0xED34AC21, 0x2F39325C,
      0xE6E492F7, 0x12E0FF95, 0x7C07613B, 0xBC6A44BD, 0x6B0B0691, 0xAD24D46F, 0x45B87A12, 0x569FF841, 0xF2D80E9D,
      0x68004098, 0x2C0CCC7A, 0xAF2BA538, 0xCE66B29C, 0x1EE3B7B3, 0x8809468A, 0xB6B59CBE, 0x2F8C41CA, 0x82B3B42A,
      0x74B7636F, 0x22ED2BC2, 0xA99BABA9, 0xF23BABD7, 0x8352BDBB, 0x903F9AFE, 0x0F7186AB, 0xBA7E9D33, 0x1FA7464B,
      0xADE0F664, 0xD9C96BFA, 0xD84EF6AA, 0xDD5909E9, 0x2A2DD0B9, 0x5A2B32EB, 0x036294D1, 0x82FD303D, 0x9CB1A099,
      0x625FB680, 0xDC2386A4, 0xF76D3714, 0xCE0C60D3, 0xE398DD08, 0x0E3FBD7D, 0xD4CFFA66, 0xC83F8FCD, 0xC2CB4DC6,
      0x4F92E5B7, 0x61598A96, 0xFB202176, 0xC8B15758, 0x438B471C, 0x21AB647E, 0xB003CE11, 0xE9370918, 0xF0194FCE,
      0x43404709, 0xDD4DF988, 0x4375FFEA, 0x4971056D],
     [0xC5580805, 0x37F30DEB, 0xD6E0D26D, 0x07CBE024, 0x680A284D, 0xBD3516AB, 0xFC45E591, 0xF0E90EE3, 0x059BADA5,
      0x098308EA, 0xC06F20DC, 0xDD0B8378, 0x15B699A9, 0xCF7AD339, 0x744E4C4B, 0x0A30ED70, 0xBCCAE8C2, 0x4EBB11E8,
      0x0E47CC0D, 0x2B1840FB, 0x6D13BED1, 0x86E299BA, 0x9DF6F23E, 0x45122384, 0x9A375CE1, 0x5E1CD241, 0xA04F8C6C,
      0xB4E47797, 0x90238703, 0x38D74674, 0xFD8C545C, 0xDCEE8152, 0x9ADF17F8, 0xC848A16A, 0xD7D4816C, 0x5AB53C5D,
      0xF1F522B3, 0x4E3367A7, 0x29235F6F, 0x17F96A32, 0xD99D00B9, 0x9BC4201E, 0x05F14E4D, 0x796DFAD3, 0xB08D4807,
      0x93680049, 0x5AFEB8CA, 0x91B362C8, 0xA33FC4E3, 0xD5FF18CB, 0xAE0122A6, 0x6A14B1F8, 0x763AD6E9, 0x68AD7779,
      0xA07B937B, 0x4AC75923, 0x569CE5A2, 0x27E998CF, 0x7F19B965, 0xC6AC5500, 0x6777ED69, 0xDF4B71D5, 0x3D48B5BD,
      0xCDE439DA, 0x002141CE, 0x0AD9DB6E, 0x090CEED7, 0xF44D6E99, 0x0017DCF6, 0xA41EB8F2, 0xE1EB7582, 0xE8395B93,
      0x175A1277, 0xBC51E8CB, 0xE3E585A4, 0xC74B1EC6, 0xE9199B95, 0xF1E37BDE, 0x40527F1E, 0x9257A840, 0x189DD197,
      0x70B46814, 0x05630250, 0xA4B14A42, 0x8DB80BA8, 0x5752FE8E, 0x4EE0F5E4, 0x38358E85, 0x247E300B, 0x409AFE50,
      0x19E7BAAB, 0xCB12CE87, 0xEA7D25EE, 0x490C5D6E, 0x3893BDE8, 0xD09CE456, 0x85BB40A9, 0x4426F0D9, 0xDF283E26,
      0x39D5EA17, 0x6500FE45, 0x3ADF565E, 0x0BE8F6D1, 0x47915943, 0x621161C5, 0xAFE173FC, 0xDFDCE0BB, 0x2CA6C730,
      0x960D03D4, 0xC6384D52, 0xA26F838B, 0x44A809D1, 0x20D2187F, 0x400F036E, 0x5CDBECC9, 0x55EDB52D, 0x562B84F9,
      0x028830A9, 0x88E135F9, 0x9EB9AABF, 0x0CFA1068, 0x9026A102, 0x4158B6D0, 0xA2193A65, 0xB1F1C8A3, 0x498669E5,
      0x657E7EC5, 0x0940E778, 0xADBE4F03, 0x90B2B970, 0xFEA9FB86, 0x3154B208, 0x04F0EA35, 0x47F8F3D0, 0xE2A1EBDA,
      0xC4679BB8, 0x88402D0C, 0xA1946B51, 0x6A93A9B7, 0xCB1E3350, 0xD520F1C7, 0x71E677E2, 0xE8F7B859, 0xCB6D3619,
      0xD2DF0D53, 0x647F24F9, 0x2A3C9456, 0x19CDB7EA, 0xFC2712A2, 0x6DD1D82D, 0xFF3DE418, 0x16AAB68B, 0xD667B177,
      0x07EAF80A, 0xC5E25F9A, 0x44D45BBD, 0x3ED3F048, 0xC223DFFC, 0x9D5F3357, 0x6FC2B16A, 0xEBD61392, 0x026BB4BF,
      0x75FBBD24, 0x824F228F, 0xBBF70EEB, 0x12229668, 0x52CD1E4E, 0xEB4D711C, 0x5F7FAA58, 0xE6EDA028, 0x299CA1BD,
      0x5E9900D3, 0x2AA64F2D, 0x82392817, 0x0974E190, 0x4FE3A658, 0x2F654F07, 0xA5413543, 0xA82823C1, 0xA1C1703F,
      0x04354708, 0x436BE907, 0x2AB4E8C5, 0x62254F01, 0xB0A3E482, 0x5D9124FE, 0x1FEC938A, 0x4FDE8783, 0xCCDF1877,
      0x7489F367, 0x8F1F4F44, 0x4AE8C75F, 0x45F310E8, 0x488C8C32, 0x6AE8A7B9, 0x97CF481D, 0x135BDC47, 0xFC43D611,
      0xEFF61311, 0x11B2A9B0, 0xE62B2600, 0x588D45BA, 0xF0BA7892, 0x0CBA4324, 0xBB98C07C, 0x2491642C, 0x7B2ACC2C,
      0x3E50D36B, 0x51BCAF55, 0xA7F02C59, 0xD5E26D66, 0x9AC6260E, 0x5CCC2774, 0xD69500C1, 0x5F9CA28F, 0x3243D0FC,
      0xE8686258, 0xD9E86C44, 0xB2FB2C5A, 0x4E2360D9, 0xDE4A0E7D, 0x02FEE700, 0xE2427FD6, 0x1EB9D2C6, 0xEDB2E55F,
      0x2CE78FF9, 0xA7337329, 0x0DA5CEBC, 0x082E0E06, 0x0D4F5C27, 0x0F852E61, 0x81E7C5A6, 0xA12F9E0D, 0xE2B5815D,
      0x70162BD4, 0x33DC2ACA, 0xF513764E, 0xCBDAB1BC, 0xC2A6C781, 0xE3D2289F, 0xE7C59A55, 0xC7AAF377, 0x2D3FB7ED,
      0xFFA20371, 0x9F47CD21, 0x38F85BA2, 0xA91A2C78, 0x511528F6, 0x5A202BD4, 0xA63DE2B3, 0xBE69B781, 0x5874A30A,
      0x6F30154D, 0x5F03CA2D, 0x09E7EF3B, 0xBC8D1FA9],
     [0xEFDCEF72, 0x650FD7C5, 0x5BFD9493, 0x95861C89, 0xBAAEE53C, 0x8ABAAE33, 0x54905BEC, 0x48968A7D, 0x0DF85318,
      0x9BDA27B8, 0x2D8264D8, 0xDE159CCD, 0xA118BE48, 0x1E82183F, 0x8AA1C032, 0x9CADD9CC, 0x8038543C, 0xEA495212,
      0xED8539A5, 0xD11CCB15, 0x70E12D26, 0xA3A7C4C8, 0x4C87D6BC, 0x292D1DAF, 0x46F268BB, 0x7D07F285, 0x22A2443D,
      0x741EEEE0, 0xB7B77460, 0x3D5E06D2, 0xC2F6587C, 0xB9156017, 0xB787029F, 0x9CD03106, 0x30D6A2E2, 0x1BF24D93,
      0xACA88103, 0xAEE79433, 0xE723C4B5, 0x15C68D1F, 0x7BE88380, 0x251F92B6, 0x2CD14CB6, 0xB5C71419, 0xD6724484,
      0xE09CFFB1, 0xA0FB9E78, 0x3E9E2291, 0xD64FDF55, 0x34BA4958, 0x6E35AF9C, 0x65447E79, 0xF2D0F435, 0xE19A9C78,
      0x34A7DEC3, 0xFFA44259, 0x1D467B90, 0x9B4E2F9B, 0xA1D2490D, 0x4F430FA0, 0x28FDE110, 0xFDDD4919, 0x55945518,
      0x5B7716EE, 0x82558CDB, 0x92708871, 0x3DBA38D9, 0xCFDA5F97, 0x52A54CF5, 0xF05D9101, 0x7474C8A9, 0xBDC2BC66,
      0x69C4A5DF, 0xD6026E29, 0x3361D2D9, 0x4D8C3AFD, 0x8617CFD4, 0x8CF7A749, 0x88B79CD7, 0xB813B731, 0xCD8DC5E7,
      0x8054E982, 0x7C9C0ACD, 0x8BF1F84E, 0xBE9DC5D0, 0x9B6049F6, 0xBCF803F3, 0x7ACB820D, 0xCDA19DBD, 0xC1C3CACB,
      0x68FADA61, 0x07003024, 0x7D464DF6, 0xAB31093F, 0x84804871, 0x74FC972D, 0xFD42AA46, 0x2B5E512B, 0x16955D7B,
      0xE4FFDE31, 0xBFBB9EAB, 0x9C79354A, 0xDFFD4C5B, 0xD5AA40D2, 0x07878F82, 0x503C3F43, 0xFFB530A7, 0xBB38A0E7,
      0x6D54427E, 0x0C5734D1, 0x0B4B023C, 0x234BD3AB, 0x55E108C6, 0x165121B1, 0x539641C2, 0xDD3F2F46, 0xFA3A9B3E,
      0xB149B486, 0x8FFAF7E4, 0x72A055F7, 0x0A410A43, 0xCE657CA9, 0x0EB49037, 0x94F4716A, 0x40296BE6, 0x86558CB5,
      0xC579C7BC, 0x80C1D7BF, 0xF93652AB, 0x4E48F926, 0xA378F155, 0xEFB84ABA, 0x1B88C95C, 0xE7EE22B9, 0x7B587C13,
      0xE9C691CB, 0x9355FF78, 0x303FBD46, 0xD179A115, 0x5AF8B127, 0x52266ACF, 0x99443ADE, 0x3D1D7595, 0x45B2FC6D,
      0x74BE94BC, 0xF60A6091, 0x80B537D4, 0x41D2012F, 0x7FEFEB31, 0xEC4DE29D, 0xC8ECCEDA, 0x2C0C00B4, 0x6C6E3088,
      0xC6AB9800, 0xF8B35769, 0xB077A3C3, 0x54DCA0A2, 0x2E83043D, 0xD563BBB8, 0x9125CA5B, 0x5050D0B1, 0xA363D4E3,
      0x4D403F58, 0x32A0B24C, 0x4D84EA91, 0x4C77F9C0, 0xC8B87E7F, 0x37015082, 0xB2F62B6B, 0x5C651521, 0x115F8D53,
      0x7D9E0EE0, 0xD5BC3655, 0x6BBD08E8, 0xF502C41B, 0xDD7AC116, 0x7487FB63, 0xD378048D, 0x4E4EE379, 0x4CEE8CAE,
      0xDC6C5956, 0x4F0859AC, 0x7CC4CC36, 0x1437E85E, 0x2AC1BB05, 0x39EF2023, 0x2CCF2497, 0xBC4B59CB, 0x1F5C78CC,
      0x6F969FC3, 0x8D344AD0, 0x8FB1FC8E, 0x04A9B536, 0x6A37C4BE, 0xD048DF9A, 0xB10B6769, 0xFAC446A4, 0x196E87BC,
      0x33957265, 0x37ADFABF, 0xE4B0C7FA, 0x9840A106, 0x8764C936, 0x5D7E15BB, 0x35E966A5, 0x243E7099, 0xC2EF22D1,
      0x32A855F3, 0xAEEEC96C, 0x536FB57B, 0x42208DA4, 0x3C05B920, 0xECAE028A, 0x5BEF0A79, 0x1E9EE8F3, 0xC2F32DEA,
      0x6703172F, 0xBF3C4AA1, 0x560A9393, 0xEF682D0B, 0xDC1265D2, 0x612CD8D6, 0x5B862271, 0x0171A816, 0x65E37272,
      0xCFDA4479, 0x65C7DE15, 0x7A593816, 0xF3C72D04, 0xD16A6DB7, 0xF757B991, 0x4CF3311C, 0x6AE82A93, 0xBC837247,
      0xFC2335BE, 0x5D5D1815, 0x2F6587B4, 0xA0EFC199, 0xD1F54686, 0xF2DBCB44, 0x84BBBDEE, 0x7759EFA4, 0x8D9401E1,
      0xA885F528, 0xAF635AB8, 0xF035D324, 0xA9F3A139, 0x0AE8B096, 0x816F9960, 0xDF8EE377, 0x53F37E8B, 0x5992FDAD,
      0x04616991, 0xDA071A8A, 0xE8E3EB8A, 0xD83F9D02]]

key = [0xE42EA6C4, 0xD5221766, 0x42AF86B0, 0x30608C3F, 0x2D833FC9, 0x18D30774, 0xFA5BA084, 0x3F8AE864, 0x39EE5535,
       0x7C1179A4, 0x5430F93B, 0xBA742FB7, 0xA2904872, 0x0AA94595]


def swap(a, b):
    temp = a
    a = b
    b = temp
    return a, b


def main():
    # performing a bitwise XOR operation
    for i in range(0, 18):
        p[i] = p[i] ^ key[i % 14]

    k = 0
    data = 0
    for i in range(0, 9):
        temp = encryption(data)
        p[k] = temp >> 32
        k += 1
        p[k] = temp & 0xffffffff
        k += 1
        data = temp
    print("This program encrypts your data using Blowfish Cipher.")
    encrypt_data = int(input("Enter data to encrypt (int): "))
    encrypted_data = encryption(encrypt_data)
    print("Encrypted data : ", encrypted_data)
    decrypted_data = decryption(encrypted_data)
    print("Decrypted data : ", decrypted_data)


def encryption(data):
    left = data >> 32
    right = data & 0xffffffff
    for i in range(0, 16):
        left = p[i] ^ left
        l1 = func(left)
        right = right ^ func(l1)
        left, right = swap(left, right)
    left, right = swap(left, right)
    left = left ^ p[17]
    right = right ^ p[16]
    encrypted = (left << 32) ^ right
    return encrypted


def func(left):
    temp = s[0][left >> 24]
    temp = (temp + s[1][left >> 16 & 0xff]) % 2 ** 32
    temp = temp ^ s[2][left >> 8 & 0xff]
    temp = (temp + s[3][left & 0xff]) % 2 ** 32
    return temp


def decryption(data):
    left = data >> 32
    right = data & 0xffffffff
    for i in range(17, 1, -1):
        left = p[i] ^ left
        l1 = func(left)
        right = right ^ func(l1)
        left, right = swap(left, right)
    left, right = swap(left, right)
    left = left ^ p[0]
    right = right ^ p[1]
    decrypted_data1 = (left << 32) ^ right
    return decrypted_data1


if __name__ == '__main__':
    main()
